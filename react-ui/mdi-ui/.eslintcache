[{"C:\\Users\\abhig\\Desktop\\Folders\\Thesis\\MDI\\MolecularDesignImporter\\react-ui\\mdi-ui\\src\\index.js":"1","C:\\Users\\abhig\\Desktop\\Folders\\Thesis\\MDI\\MolecularDesignImporter\\react-ui\\mdi-ui\\src\\Components\\upload\\upload.js":"2","C:\\Users\\abhig\\Desktop\\Folders\\Thesis\\MDI\\MolecularDesignImporter\\react-ui\\mdi-ui\\src\\App.js":"3"},{"size":511,"mtime":1611829163413,"results":"4","hashOfConfig":"5"},{"size":5381,"mtime":1611869660235,"results":"6","hashOfConfig":"5"},{"size":630,"mtime":1611813396541,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"vvq8cb",{"filePath":"11","messages":"12","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\abhig\\Desktop\\Folders\\Thesis\\MDI\\MolecularDesignImporter\\react-ui\\mdi-ui\\src\\index.js",[],["16","17"],"C:\\Users\\abhig\\Desktop\\Folders\\Thesis\\MDI\\MolecularDesignImporter\\react-ui\\mdi-ui\\src\\Components\\upload\\upload.js",["18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37"],"import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport {Link } from \"react-router-dom\";\r\nimport ReactCrop, { makeAspectCrop } from 'react-image-crop'\r\nimport 'react-image-crop/dist/ReactCrop.css'\r\n\r\nclass ImageUploadCard extends React.Component {\r\n    state = {\r\n      mainState: \"initial\", \r\n      imageUploaded: 0,\r\n      imageEdit: 0,\r\n      selectedFile: null,\r\n      crop:{\r\n          x:10,\r\n          y:10,\r\n          width:80,\r\n          height:80,\r\n      }\r\n    };\r\n\r\n    handleUploadClick = event => {\r\n        console.log();\r\n        var file = event.target.files[0];\r\n        const reader = new FileReader();\r\n        var url = reader.readAsDataURL(file);\r\n    \r\n        reader.onloadend = function(e) {\r\n          this.setState({\r\n            selectedFile: [reader.result]\r\n          });\r\n        }.bind(this);\r\n        console.log(url); // Would see a path?\r\n    \r\n        this.setState({\r\n          mainState: \"uploaded\",\r\n          selectedFile: event.target.files[0],\r\n          imageUploaded: 1\r\n        });\r\n    };\r\n\r\n    handleEditClick = event => {\r\n        console.log();\r\n    \r\n        this.setState({\r\n          mainState: \"edit\",\r\n          imageEdit: 1\r\n        });\r\n    };\r\n\r\n    handleSubmitClick = event => {\r\n      console.log();\r\n  \r\n      this.setState({\r\n        mainState: \"edit\",\r\n        imageEdit: 1\r\n      });\r\n  };\r\n\r\n    onCropComplete = crop => {\r\n        console.log('onCropComplete', crop)\r\n    }\r\n    \r\n    onCropChange = crop => {\r\n        this.setState({ crop })\r\n    }\r\n\r\n    renderInitialState() {\r\n        const { classes, theme } = this.props;\r\n        const { value } = this.state;\r\n    \r\n        return (\r\n            <div>\r\n         <h1>Molecular Design Importer</h1>\r\n         <h2>Upload an Image</h2>\r\n          <Card className={300} variant=\"outlined\">\r\n            <CardContent>\r\n            <input\r\n            ref = {(fileUpload) => {this.fileUpload = fileUpload;}}\r\n                  accept=\"image/*\"\r\n                  id=\"upload-icon\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={this.handleUploadClick}\r\n                  style={{visibility: 'hidden'}}\r\n                />\r\n                <label htmlFor=\"upload-icon\">\r\n                <Button onClick={() => this.fileUpload.click()} variant=\"contained\" color=\"primary\">\r\n                Upload Image\r\n                </Button>\r\n                </label>\r\n            </CardContent>\r\n          </Card>\r\n          </div>\r\n        );\r\n    }\r\n    \r\n    renderUploadedState() {\r\n        const { classes, theme } = this.props;\r\n    \r\n        return (\r\n            <div>\r\n         <h1>Molecular Design Importer</h1>\r\n         <h2>Upload an Image</h2>\r\n          <Card>\r\n              <CardContent>\r\n                  <img\r\n                    width=\"30%\"\r\n                    src={this.state.selectedFile}\r\n                    />\r\n                <input\r\n            ref = {(fileUpload) => {this.fileUpload = fileUpload;}}\r\n                  accept=\"image/*\"\r\n                  id=\"upload-icon\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={this.handleUploadClick}\r\n                  style={{visibility: 'hidden'}}\r\n                />\r\n                <label htmlFor=\"upload-icon\">\r\n                <Button onClick={() => this.fileUpload.click()} variant=\"contained\" color=\"secondary\">\r\n                Re-Upload\r\n                </Button>\r\n                </label>\r\n                <Button onClick={() => this.handleEditClick()} variant=\"contained\" color=\"primary\">\r\n                Edit Image\r\n                </Button>\r\n              </CardContent> \r\n          </Card>\r\n          </div>\r\n        );\r\n    }\r\n\r\n    renderEditState() {\r\n        const { classes, theme } = this.props;\r\n    \r\n        return (\r\n            <div>\r\n         <h1>Molecular Design Importer</h1>\r\n         <h2>Set Bounding Box</h2>\r\n          <Card>\r\n              <CardContent>\r\n              {this.state.selectedFile && (\r\n                <ReactCrop\r\n                    src={this.state.selectedFile}\r\n                    crop={this.state.crop}\r\n                    onComplete={this.onCropComplete}\r\n                    onChange={this.onCropChange}\r\n                />\r\n        )}\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                Submit\r\n                </Button>\r\n              </CardContent> \r\n          </Card>\r\n          </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { classes, theme } = this.props;\r\n    \r\n        return (\r\n          <React.Fragment>\r\n            <div>\r\n                {(this.state.mainState == \"initial\" && this.renderInitialState()) ||\r\n                (this.state.mainState == \"uploaded\" && this.renderUploadedState()) ||\r\n                (this.state.mainState == \"edit\" && this.renderEditState())}\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageUploadCard;","C:\\Users\\abhig\\Desktop\\Folders\\Thesis\\MDI\\MolecularDesignImporter\\react-ui\\mdi-ui\\src\\App.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":3,"column":8,"nodeType":"44","messageId":"45","endLine":3,"endColumn":19},{"ruleId":"42","severity":1,"message":"46","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":22},{"ruleId":"42","severity":1,"message":"47","line":6,"column":8,"nodeType":"44","messageId":"45","endLine":6,"endColumn":18},{"ruleId":"42","severity":1,"message":"48","line":7,"column":8,"nodeType":"44","messageId":"45","endLine":7,"endColumn":29},{"ruleId":"42","severity":1,"message":"49","line":8,"column":8,"nodeType":"44","messageId":"45","endLine":8,"endColumn":18},{"ruleId":"42","severity":1,"message":"50","line":10,"column":9,"nodeType":"44","messageId":"45","endLine":10,"endColumn":13},{"ruleId":"42","severity":1,"message":"51","line":11,"column":21,"nodeType":"44","messageId":"45","endLine":11,"endColumn":35},{"ruleId":"42","severity":1,"message":"52","line":75,"column":17,"nodeType":"44","messageId":"45","endLine":75,"endColumn":24},{"ruleId":"42","severity":1,"message":"53","line":75,"column":26,"nodeType":"44","messageId":"45","endLine":75,"endColumn":31},{"ruleId":"42","severity":1,"message":"54","line":76,"column":17,"nodeType":"44","messageId":"45","endLine":76,"endColumn":22},{"ruleId":"42","severity":1,"message":"52","line":105,"column":17,"nodeType":"44","messageId":"45","endLine":105,"endColumn":24},{"ruleId":"42","severity":1,"message":"53","line":105,"column":26,"nodeType":"44","messageId":"45","endLine":105,"endColumn":31},{"ruleId":"55","severity":1,"message":"56","line":113,"column":19,"nodeType":"57","endLine":116,"endColumn":23},{"ruleId":"42","severity":1,"message":"52","line":141,"column":17,"nodeType":"44","messageId":"45","endLine":141,"endColumn":24},{"ruleId":"42","severity":1,"message":"53","line":141,"column":26,"nodeType":"44","messageId":"45","endLine":141,"endColumn":31},{"ruleId":"42","severity":1,"message":"52","line":167,"column":17,"nodeType":"44","messageId":"45","endLine":167,"endColumn":24},{"ruleId":"42","severity":1,"message":"53","line":167,"column":26,"nodeType":"44","messageId":"45","endLine":167,"endColumn":31},{"ruleId":"58","severity":1,"message":"59","line":172,"column":40,"nodeType":"60","messageId":"61","endLine":172,"endColumn":42},{"ruleId":"58","severity":1,"message":"59","line":173,"column":39,"nodeType":"60","messageId":"61","endLine":173,"endColumn":41},{"ruleId":"58","severity":1,"message":"59","line":174,"column":39,"nodeType":"60","messageId":"61","endLine":174,"endColumn":41},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'CardActions' is defined but never used.","Identifier","unusedVar","'CardActionArea' is defined but never used.","'Typography' is defined but never used.","'AddPhotoAlternateIcon' is defined but never used.","'IconButton' is defined but never used.","'Link' is defined but never used.","'makeAspectCrop' is defined but never used.","'classes' is assigned a value but never used.","'theme' is assigned a value but never used.","'value' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]